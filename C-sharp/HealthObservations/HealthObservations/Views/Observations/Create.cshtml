@model HealthObservations.Models.Measurement

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Measurement</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.ObservationTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ObservationTime)
            @Html.ValidationMessageFor(model => model.ObservationTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Observation)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Observation)
            @Html.ValidationMessageFor(model => model.Observation)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Notes)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Notes)
            @Html.ValidationMessageFor(model => model.Notes)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Validated)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Validated)
            @Html.ValidationMessageFor(model => model.Validated)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PatientId)
        </div>
        <div class="editor-field">
        @* List of Patient names and Id's in ViewData.patients*@
        @*  Perhaps model should be modified to make this easily accessible *@
        @* HtmlHelper.DropDowList didn't work *@
        <select data-val="true" data-val-number="The field PatientId must be a number."
            data-val-required="The PatientId field is required." id="PatientId" name="PatientId" data-type="number">
        @{
            System.Collections.Generic.List<HealthObservations.Models.Patient> pats = ViewData["patients"] as List<HealthObservations.Models.Patient>;
            foreach (HealthObservations.Models.Patient p in pats)
            {
                var id = p.Id.ToString();      
                            <option value="@id">@p.Lastname</option>
            }
        }
        </select>
            @Html.ValidationMessageFor(model => model.PatientId)
        </div>
        }
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
